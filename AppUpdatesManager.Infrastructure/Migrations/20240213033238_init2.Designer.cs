// <auto-generated />
using System;
using AppUpdatesManager.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AppUpdatesManager.Infrastructure.Migrations
{
    [DbContext(typeof(AppUpdatesManagerDbContext))]
    [Migration("20240213033238_init2")]
    partial class init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.ApplicationUpdateEntity", b =>
                {
                    b.Property<int>("ApplicationUpdateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ApplicationUpdateId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("ApplicationUpdateId");

                    b.ToTable("ApplicationUpdates");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.DownloadDetailEntity", b =>
                {
                    b.Property<int>("DownloadDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.Property<int?>("ApplicationUpdateEntityApplicationUpdateId")
                        .HasColumnType("integer");

                    b.Property<string>("DownloadUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DownloadDetailId");

                    b.HasIndex("ApplicationUpdateEntityApplicationUpdateId");

                    b.ToTable("DownloadDetails");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.SoftwareVersionEntity", b =>
                {
                    b.Property<int>("SoftwareVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SoftwareVersionId"));

                    b.Property<string>("Checksum")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("DownloadDetailId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("SizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("SoftwareVersionId");

                    b.HasIndex("DownloadDetailId");

                    b.ToTable("SoftwareVersions");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.UpdateRequirementEntity", b =>
                {
                    b.Property<int>("UpdateRequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.HasKey("UpdateRequirementId");

                    b.ToTable("UpdateRequirements");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.UpdateStrategyEntity", b =>
                {
                    b.Property<int>("UpdateStrategyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UpdateStrategyId"));

                    b.Property<int>("MinimumCode")
                        .HasColumnType("integer");

                    b.Property<int>("UpdateRequirementId")
                        .HasColumnType("integer");

                    b.HasKey("UpdateStrategyId");

                    b.HasIndex("UpdateRequirementId")
                        .IsUnique();

                    b.ToTable("UpdateStrategies");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.DownloadDetailEntity", b =>
                {
                    b.HasOne("AppUpdatesManager.Infrastructure.Entities.ApplicationUpdateEntity", null)
                        .WithMany("DownloadDetails")
                        .HasForeignKey("ApplicationUpdateEntityApplicationUpdateId");

                    b.HasOne("AppUpdatesManager.Infrastructure.Entities.SoftwareVersionEntity", "CurrentVersion")
                        .WithMany()
                        .HasForeignKey("DownloadDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppUpdatesManager.Infrastructure.Entities.UpdateRequirementEntity", "RequiredUpdate")
                        .WithMany()
                        .HasForeignKey("DownloadDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentVersion");

                    b.Navigation("RequiredUpdate");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.SoftwareVersionEntity", b =>
                {
                    b.HasOne("AppUpdatesManager.Infrastructure.Entities.DownloadDetailEntity", "DownloadDetail")
                        .WithMany()
                        .HasForeignKey("DownloadDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DownloadDetail");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.UpdateRequirementEntity", b =>
                {
                    b.HasOne("AppUpdatesManager.Infrastructure.Entities.UpdateStrategyEntity", "SoftUpdate")
                        .WithMany()
                        .HasForeignKey("UpdateRequirementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SoftUpdate");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.UpdateStrategyEntity", b =>
                {
                    b.HasOne("AppUpdatesManager.Infrastructure.Entities.UpdateRequirementEntity", "UpdateRequirement")
                        .WithOne("HardUpdate")
                        .HasForeignKey("AppUpdatesManager.Infrastructure.Entities.UpdateStrategyEntity", "UpdateRequirementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UpdateRequirement");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.ApplicationUpdateEntity", b =>
                {
                    b.Navigation("DownloadDetails");
                });

            modelBuilder.Entity("AppUpdatesManager.Infrastructure.Entities.UpdateRequirementEntity", b =>
                {
                    b.Navigation("HardUpdate")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
